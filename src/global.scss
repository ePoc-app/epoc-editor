/* these are necessary styles for vue flow */
@import '@vue-flow/core/dist/style.css';

/* this contains the default theme, these are optional styles */
@import '@vue-flow/core/dist/theme-default.css';

@import '_colors';
@import '_fonts';
@import '_icon';
@import '_tinymce';

html,
body,
#app {
    margin: 0;
    height: 100%;
    color: var(--text);
    background-color: var(--background);
    font-family: 'Open Sans', sans-serif;
    font-size: 16px;
}

#app {
    display: flex;
    flex-direction: column;
}

.cursor-not-allowed {
    * {
        cursor: no-drop !important;
    }
}

.cursor-allowed {
    * {
        cursor: copy !important;
    }
}

.cursor-move {
    * {
        cursor: move !important;
    }
}

.btn {
    border: none;
    cursor: pointer;
    display: flex;
    color: var(--text);
    border-radius: 6px;
    transition: box-shadow 0.2s ease-in-out;
    i {
        margin-right: 0.5rem;
        font-size: 1.5rem;
        font-weight: 500;
    }
    &-outline {
        border: 2px solid var(--border);
        background-color: var(--content);
        padding: 5px;
        align-items: center;
        justify-content: center;
        transition: box-shadow 0.2s ease-in-out;
        &:hover {
            box-shadow: 0 1px 8px 0 var(--shadow-outer);
        }
        &:active {
            opacity: 0.7;
        }
    }
    &-large {
        font-weight: bold;
        padding: 0.8rem;
        width: 100%;
        &:first-child {
            margin-right: 1rem;
        }
    }
    &-content {
        transform: translate(0, 0);
        width: 60px;
        height: 60px;
        border-radius: 12px;
        border: 2px solid var(--border);
        background-color: var(--content);
        box-shadow: 0 1px 8px 0 var(--shadow);
        transition: all 0.2s ease-in-out;
        cursor: inherit;
        display: flex;
        flex-direction: column;
        i {
            margin: auto;
            font-size: 1.5rem;
        }
        &-large {
            width: calc(62px + 2rem);
            height: calc(62px + 2rem);
            margin: 0;
            span {
                margin: 0.5rem auto auto auto;
            }
            i {
                margin-bottom: 0;
            }
        }
        &-node {
            &:hover {
                box-shadow: 0 2px 5px 0 var(--shadow-outer);
            }
            &.active {
                color: var(--editor-blue);
                border: 2px solid var(--editor-blue);
                box-shadow: 0 1px 8px 0 var(--editor-blue-shadow);
            }
            &.highlight {
                color: var(--editor-yellow);
                border: 2px solid var(--editor-yellow);
            }
        }
        &-blue {
            background-color: var(--button-blue);
            box-shadow: none;
            &-question {
                &:active,
                &.active {
                    background-color: var(--content);
                    box-shadow: 0 2px 5px 0 var(--shadow);
                }
            }
            &:hover {
                background-color: var(--content);
                box-shadow: 0 2px 5px 0 var(--shadow-outer);
            }
        }
    }
    &-close {
        display: flex;
        align-items: center;
        justify-content: center;
        position: absolute;
        top: 1rem;
        right: 1rem;
        width: 1.5rem;
        height: 1.5rem;
        z-index: 10;
        border-radius: 2rem;
        i {
            margin: 0;
            font-size: 14px;
            font-weight: 800;
            color: var(--text);
        }
    }
    &-form {
        padding: 0.6rem 1rem;
        border: 1px solid var(--border);
        border-radius: 8px;
        font-size: 1rem;
        text-align: center;
        background-color: var(--content);
        max-width: fit-content;
        margin-right: 0.8rem;
        margin-bottom: 0.8rem;
        &:hover {
            box-shadow: 0 2px 5px 0 var(--shadow-outer);
        }
        &:active {
            opacity: 0.7;
        }
        i {
            font-size: 1.2rem;
        }
    }
}

hr {
    border: 0;
    &.separator {
        border-top: 1px solid var(--border);
        width: 100%;
        margin-bottom: 1.7rem;
    }
    &.vertical-separator {
        border-left: 2px solid var(--border);
        height: 1.3rem;
        margin-right: 1rem;
    }
}

.card-icon {
    border-radius: 6px;
    background-color: white;
    border: 1px solid var(--list-border);
    box-shadow: 0 1px 8px var(--shadow);
    margin-right: 1rem;
    margin-left: 1rem;
    padding: 0.2rem 0.5rem;
    font-size: 1.2rem;
}

.card {
    background-color: var(--content);
    border-radius: 12px;
    display: flex;
    flex-direction: column;
    &-large {
        padding: 3rem;
        width: 50%;
        box-shadow: 0 1px 8px 0 var(--shadow);
        max-width: 800px;
        min-width: 500px;
    }
}

.card-list-item {
    display: flex;
    width: 100%;
    background-color: var(--item-background);
    border: 2px solid var(--list-border);
    border-radius: 6px;
    margin-bottom: 0.6rem;
    align-items: center;
    p {
        flex-grow: 1;
    }
    small {
        margin-right: 1rem;
        color: var(--text-secondary);
        font-weight: 400;
        min-width: fit-content;
    }
}

.node {
    min-width: 62px;
    min-height: 62px;
    background-color: var(--node);
    border-radius: 8px;
    border: 2px solid var(--border);
    transition: all 0.15s ease-in-out;
    &-list {
        padding: 1rem;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    &.active {
        border: 2px solid var(--editor-blue);
        box-shadow: 0 1px 8px 0 var(--editor-blue-shadow);
        background-color: var(--node-active);
    }

    &.highlight {
        border: 2px solid var(--editor-green) !important;
    }
}

.input {
    background-color: var(--item-background);
    border: 1px solid var(--border);
    border-radius: 4px;
    padding: 0.5rem;
    margin-bottom: 1.5rem;
    font-size: 1.1rem;
    color: var(--text);
    outline: none;
    width: auto;

    &::placeholder {
        color: var(--editor-grayblue);
    }

    &-card {
        width: calc(100% - 1.4rem);
        margin: 0 0 1rem;
    }

    &-file {
        font-size: 1.1rem;
        cursor: pointer;
        flex-grow: 2;
        &::file-selector-button {
            display: none;
        }
    }

    &-textarea {
        resize: none;
        min-height: 5rem;
    }
    &:focus {
        outline: 1px solid var(--editor-blue);
        box-shadow: 0 1px 8px 0 var(--editor-blue-shadow);
    }
}

.input-label {
    margin-bottom: 0.5rem;
    font-size: 1rem;
    font-family: 'Open Sans', sans-serif;
}

.form-icon {
    border: 1px solid var(--border);
    box-shadow: 0 1px 4px 0 var(--shadow-outer);
    border-radius: 8px;
    width: fit-content;
    height: fit-content;
    padding: 0.3rem 0.5rem;
    font-size: 18px;
}

textarea {
    font-family: inherit;
    font-size: inherit;
}

.screen-node {
    transition: all 0.2s ease-in-out;
    &:hover {
        box-shadow: 0 2px 5px 0 var(--shadow-outer);
    }
}

.field {
    display: flex;
    flex-direction: column;
    &-index {
        color: var(--inria-red);
    }
    &-title {
        margin-bottom: 0.5rem;
    }
}

.btn-top-bar {
    padding: 0.7rem 1rem;
    margin-right: 1rem;
    background-color: var(--button-blue);
    border-radius: 8px;
    border: 1px solid var(--border);
    transition: box-shadow 0.2s ease-in-out;
    i {
        margin: auto;
        font-size: 1rem;
    }
    .text-top-bar {
        margin-left: 0.5rem;
    }
    .icon-chevron {
        font-size: 0.5rem;
    }
    .zoom-span {
        margin-right: 0.5rem;
        margin-left: 0;
    }
    &:disabled {
        opacity: 0.5;
        cursor: default;
    }
    &:not(:disabled):hover {
        background-color: var(--content);
        box-shadow: 0 1px 8px 0 var(--shadow);
    }
    &:active {
        opacity: 0.7;
    }
}

.node:not(.hover) .ghost {
    margin: 0 !important;
    display: none;
}

.ghost {
    opacity: 0.5;
}

.node {
    .ghost {
        * {
            opacity: 0;
        }

        opacity: 0.8;
        border-radius: 12px;
        background-color: var(--node-ghost);
    }
}

.spinner {
    display: inline-block;
    vertical-align: middle;
    width: 1.5em;
    height: 1.5em;
    &:after {
        content: ' ';
        display: block;
        width: 1.5em;
        height: 1.5em;
        border-radius: 50%;
        border-width: 0.2em;
        border-style: solid;
        border-color: var(--editor-grayblue) transparent var(--editor-grayblue) transparent;
        animation: spin 1.2s linear infinite;
        box-sizing: border-box;
    }
    @keyframes spin {
        0% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(360deg);
        }
    }
}

g.selected {
    path {
        stroke: var(--editor-blue) !important;
    }
}

// arrow for the question menu
.arrow {
    position: relative;
    background-color: var(--content);
    text-align: left;
    // transform: rotate(80%);
}
.arrow:before,
.arrow:after {
    content: '';
    position: absolute;
    background-color: inherit;
}
.arrow,
.arrow:before,
.arrow:after {
    width: 0.8rem;
    height: 0.8rem;
    border-top-right-radius: 30%;
}

.arrow {
    transform: rotate(-60deg) skewX(-30deg) scale(1, 0.866);
}
.arrow:before {
    transform: rotate(-135deg) skewX(-45deg) scale(1.414, 0.707) translate(0, -50%);
}
.arrow:after {
    transform: rotate(135deg) skewY(-45deg) scale(0.707, 1.414) translate(50%);
}

.arrow-wrapper {
    position: absolute;
    top: calc(50% - 0.4rem);
    right: calc(100% - 5px);
    // transform-origin: center center;
    transform: rotate(-90deg) translateY(-50%);
}

.panel {
    h1,
    h3,
    label {
        user-select: none;
    }
}

.vue-flow__nodesselection-rect,
.vue-flow__selection {
    background-color: #00b3e920;
    border: 2px dashed #00b3e9f0;
    border-radius: 8px;
}

.vue-flow__nodesselection-rect {
    padding: 2rem 1rem 1rem 1rem;
    transform: translate(-1rem, -2rem);
}

.vue-flow__node.selected {
    .node {
        border: 2px solid var(--editor-blue);
        box-shadow: 0 1px 8px 0 var(--editor-blue-shadow);
    }
}

// TinyMCE Editor
.tox-tinymce {
    margin-bottom: 1.5rem;
    border: 1px solid var(--border) !important;

    &.focus {
        border: 1px solid var(--editor-blue) !important;
        box-shadow: 0 1px 8px 0 var(--editor-blue-shadow);
    }
}

//? button are applied a width in certain cases i don't understand why
.tox-tbtn {
    width: 28px !important;
}

.tox-statusbar {
    border: none !important;

    &__branding {
        display: none;
    }

    &__path {
        display: none !important;
    }
}

[id^='tiny-vue_'] {
    height: 340px;
    border: 1px solid var(--border);
    border-radius: 8px;
    resize: none;
    margin-bottom: 1.5rem;
    padding: 4rem 1rem 1rem 1rem;
}

.badge-notification {
    position: absolute;
    top: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
    z-index: 10;

    &-left {
        left: 0;
        transform: translate(-45%, -20%);
    }

    &-right {
        right: 0;
        transform: translate(45%, -40%);
    }

    small {
        position: absolute;
        color: white;
        font-size: 0.8rem;
    }

    img {
        height: 100%;
    }
}

.editor-container {
    overflow-x: hidden;
}

body > input {
    display: none;
}
